*, *::after, *::before{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-size: 14px;
}

// Declaring variables

$xlargeDMaxWidth : 1840px;
$largeDMaxWidth : 1400px;
$medDMaxWidth : 870px;
$smallDMaxWidth : 670px;
$margin : 2%;
$col-length : 13;


@mixin mQ($args...){
    @if (length($args)== 1)
    {
        @media screen and (max-width: nth($args, 1)){
            @content;
        }
    }
    @if (length($args) == 2)
    {
        @media screen and (max-width: nth($args, 1)) and (min-width: nth($args, 2)){
            @content;
        }
    }
}

@mixin grid($i) {
    display: grid;
    margin-top: .5rem;
    grid-gap: .2rem;
    grid-column: span $i !important;
}

body{
    display: flex;
    justify-content: center;
    align-items: flex-start;
}

.container
{
    width: 92%;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    justify-content: center;
    align-items: center;
}
    
.row
{
    width: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    grid-gap: $margin;
    grid-template-rows: 1fr repeat;
    justify-content: center;
    align-items: center;
}


@for $i from 1 to $col-length {
    .col-#{$i}{
        @include grid($i);
    }
}

@for $i from 1 to $col-length {
    .col-small-#{$i}{
        @include mQ($smallDMaxWidth){
            @include grid($i)
        }
    }
}

@for $i from 1 to $col-length{
    .col-medium-#{$i}{
        @include mQ($medDMaxWidth, $smallDMaxWidth){
            @include grid($i)
        }
    }
}

@for $i from 1 to $col-length{
     .col-large-#{$i}{
       @include mQ($largeDMaxWidth, $medDMaxWidth){
            @include grid($i)
        }
    }
}

@for $i from 1 to $col-length{
    .col-xlarge-#{$i}{
        @include mQ($xlargeDMaxWidth, $largeDMaxWidth){
            @include grid($i)
        }
    }
} 

